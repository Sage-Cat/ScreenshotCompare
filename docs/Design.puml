@startuml

package "ScreenshotCompare" {
    class MainWindow {
        - m_startStopButton: QPushButton
        - m_gridLayout: QGridLayout
        - m_statusLabel: QLabel
        - m_screenshotService: ScreenshotService
        - m_databaseModule: DatabaseModule
        + onStartStopClicked(): void
        + onNewScreenshotTaken(image: QImage, similarity: double): void
        + updateGridView(image: QImage, similarity: double): void
        + saveScreenshotToDatabase(image: QImage, similarity: double): void
        + loadScreenshotsFromDatabase(): void
    }

    class ScreenshotService {
        - captureTimer: QTimer
        - lastScreenshot: QImage
        - similarityWatcher: QFutureWatcher<double>
        + startCapturing(): void
        + stopCapturing(): void
        + captureScreen(): void
        + handleSimilarityCalculationFinished(): void
        + newScreenshotTaken(screenshot: QImage, similarity: double)
    }

    class ImageComparisonModule {
        + calculateSimilarity(image1: QImage, image2: QImage): double
    }

    class DatabaseModule {
        - m_database: QSqlDatabase
        - m_connectionName: QString
        + openDatabase(): bool
        + createTableIfNeeded(): void
        + saveScreenshot(image: QImage, similarity: double): bool
        + loadScreenshots(): QMap<int, QPair<QImage, double>>
    }

}

MainWindow -right-> ScreenshotService : uses
ScreenshotService -down-> ImageComparisonModule : delegates comparison
ImageComparisonModule -down-> DatabaseModule : sends results
DatabaseModule -left-> MainWindow : provides data on startup

@enduml
